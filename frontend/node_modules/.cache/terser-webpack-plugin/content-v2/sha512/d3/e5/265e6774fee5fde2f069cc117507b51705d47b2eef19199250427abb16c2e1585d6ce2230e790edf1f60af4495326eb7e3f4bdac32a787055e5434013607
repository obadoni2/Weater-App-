{"map":"{\"version\":3,\"sources\":[\"C:/Users/EMMA/weather/WEATHERAPP/frontend/src/App.js\",\"C:/Users/EMMA/weather/WEATHERAPP/frontend/src/index.js\"],\"names\":[\"App\",\"location\",\"setLocation\",\"useState\",\"currentWeather\",\"setCurrentWeather\",\"forecast\",\"setForecast\",\"error\",\"setError\",\"loading\",\"setLoading\",\"useEffect\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"console\",\"log\",\"catch\",\"React\",\"createElement\",\"className\",\"onSubmit\",\"e\",\"preventDefault\",\"async\",\"loc\",\"resCurrent\",\"encodeURIComponent\",\"ok\",\"Error\",\"dataCurrent\",\"resForecast\",\"dataForecast\",\"err\",\"message\",\"fetchWeather\",\"type\",\"placeholder\",\"value\",\"onChange\",\"target\",\"name\",\"sys\",\"country\",\"src\",\"weather\",\"icon\",\"alt\",\"description\",\"main\",\"temp\",\"humidity\",\"wind\",\"speed\",\"list\",\"filter\",\"item\",\"index\",\"map\",\"key\",\"Date\",\"dt_txt\",\"toLocaleDateString\",\"weekday\",\"month\",\"day\",\"getFullYear\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState, useEffect } from 'react';\\r\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\r\\nimport './App.css';\\r\\n\\r\\nfunction App() {\\r\\n  // State variables to manage location input, weather data, errors, and loading status\\r\\n  const [location, setLocation] = useState('');\\r\\n  const [currentWeather, setCurrentWeather] = useState(null);\\r\\n  const [forecast, setForecast] = useState(null);\\r\\n  const [error, setError] = useState('');\\r\\n  const [loading, setLoading] = useState(false);\\r\\n\\r\\n  // useEffect to test API connection by fetching London's current weather on mount\\r\\n  useEffect(() => {\\r\\n    fetch('http://localhost:5000/weather/current?location=London')\\r\\n      .then(response => response.json())\\r\\n      .then(data => console.log(data))\\r\\n      .catch(error => console.error('Error:', error));\\r\\n  }, []);\\r\\n\\r\\n  // Function to fetch current weather and forecast data from the backend\\r\\n  const fetchWeather = async (loc) => {\\r\\n    if (!loc) {\\r\\n      setError('Please enter a location.');\\r\\n      return;\\r\\n    }\\r\\n    setError('');\\r\\n    setLoading(true);\\r\\n    try {\\r\\n      // Fetch current weather\\r\\n      const resCurrent = await fetch(`http://localhost:5000/weather/current?location=${encodeURIComponent(loc)}`);\\r\\n      if (!resCurrent.ok) {\\r\\n        throw new Error('Failed to fetch current weather.');\\r\\n      }\\r\\n      const dataCurrent = await resCurrent.json();\\r\\n      setCurrentWeather(dataCurrent);\\r\\n\\r\\n      // Fetch 5-day forecast\\r\\n      const resForecast = await fetch(`http://localhost:5000/weather/forecast?location=${encodeURIComponent(loc)}`);\\r\\n      if (!resForecast.ok) {\\r\\n        throw new Error('Failed to fetch forecast.');\\r\\n      }\\r\\n      const dataForecast = await resForecast.json();\\r\\n      setForecast(dataForecast);\\r\\n    } catch (err) {\\r\\n      setError(err.message);\\r\\n      setCurrentWeather(null);\\r\\n      setForecast(null);\\r\\n    }\\r\\n    setLoading(false);\\r\\n  };\\r\\n\\r\\n  // Handle form submission to fetch weather data for the entered location\\r\\n  const handleSubmit = (e) => {\\r\\n    e.preventDefault();\\r\\n    fetchWeather(location);\\r\\n  };\\r\\n\\r\\n  return (\\r\\n    <div className=\\\"app-container\\\">\\r\\n      {/* Header with search form */}\\r\\n      <header className=\\\"hero\\\">\\r\\n        <div className=\\\"hero-overlay\\\">\\r\\n          <div className=\\\"hero-content text-center\\\">\\r\\n            <h1>Weather Wonder</h1>\\r\\n            <p>Discover the weather in your favorite locations</p>\\r\\n            <form onSubmit={handleSubmit} className=\\\"search-form mt-4\\\">\\r\\n              <input\\r\\n                type=\\\"text\\\"\\r\\n                placeholder=\\\"Enter location (city, zip, landmark...)\\\"\\r\\n                value={location}\\r\\n                onChange={(e) => setLocation(e.target.value)}\\r\\n              />\\r\\n              <button type=\\\"submit\\\">Search</button>\\r\\n            </form>\\r\\n            {error && <div className=\\\"alert alert-danger mt-3\\\">{error}</div>}\\r\\n          </div>\\r\\n        </div>\\r\\n      </header>\\r\\n\\r\\n      {/* Main content area */}\\r\\n      <main className=\\\"container py-5\\\">\\r\\n        {/* Loading indicator */}\\r\\n        {loading && (\\r\\n          <div className=\\\"loader-container\\\">\\r\\n            <div className=\\\"loader\\\"></div>\\r\\n          </div>\\r\\n        )}\\r\\n\\r\\n        {/* Current weather display */}\\r\\n        {currentWeather && !loading && (\\r\\n          <div className=\\\"current-weather card mx-auto mb-5\\\">\\r\\n            <div className=\\\"card-body text-center\\\">\\r\\n              <h2>{currentWeather.name}, {currentWeather.sys.country}</h2>\\r\\n              <div className=\\\"weather-details d-flex justify-content-center align-items-center\\\">\\r\\n                <img\\r\\n                  src={`http://openweathermap.org/img/wn/${currentWeather.weather[0].icon}@2x.png`}\\r\\n                  alt={currentWeather.weather[0].description}\\r\\n                />\\r\\n                <div className=\\\"weather-info ml-3\\\">\\r\\n                  <h3>{currentWeather.main.temp} Â°C</h3>\\r\\n                  <p className=\\\"mb-0 text-capitalize\\\">{currentWeather.weather[0].description}</p>\\r\\n                  <p className=\\\"mb-0\\\">Humidity: {currentWeather.main.humidity}%</p>\\r\\n                  <p className=\\\"mb-0\\\">Wind: {currentWeather.wind.speed} m/s</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n\\r\\n        {/* 5-day forecast display */}\\r\\n        {forecast && !loading && (\\r\\n          <div className=\\\"forecast-section\\\">\\r\\n            <h2 className=\\\"text-center text-white mb-4\\\">5-Day Forecast</h2>\\r\\n            <div className=\\\"row\\\">\\r\\n              {forecast.list\\r\\n                .filter((item, index) => index % 8 === 0) // Select one entry per day (every 8th item, assuming 3-hour intervals)\\r\\n                .map((item, index) => (\\r\\n                  <div key={index} className=\\\"col-md-2 col-sm-4 col-6\\\">\\r\\n                    <div className=\\\"forecast-card card mb-3\\\">\\r\\n                      <div className=\\\"card-body text-center\\\">\\r\\n                        <h5>\\r\\n                          {new Date(item.dt_txt).toLocaleDateString('en-US', {\\r\\n                            weekday: 'short',\\r\\n                            month: 'short',\\r\\n                            day: 'numeric',\\r\\n                          })}\\r\\n                        </h5>\\r\\n                        <img\\r\\n                          src={`http://openweathermap.org/img/wn/${item.weather[0].icon}@2x.png`}\\r\\n                          alt={item.weather[0].description}\\r\\n                        />\\r\\n                        <p className=\\\"text-capitalize\\\">{item.weather[0].description}</p>\\r\\n                        <p>{item.main.temp} Â°C</p>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                ))}\\r\\n            </div>\\r\\n          </div>\\r\\n        )}\\r\\n      </main>\\r\\n\\r\\n      {/* Footer */}\\r\\n      <footer className=\\\"text-center py-3\\\">\\r\\n        <p className=\\\"mb-0\\\">Weather Wonder Â© {new Date().getFullYear()}</p>\\r\\n      </footer>\\r\\n    </div>\\r\\n  );\\r\\n}\\r\\n\\r\\nexport default App;\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom/client';\\r\\nimport App from './App.js';\\r\\nimport './App.css';\\r\\n// Create a React root and render the App component within React.StrictMode\\r\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\r\\nroot.render(\\r\\n  <React.StrictMode>\\r\\n    <App />\\r\\n  </React.StrictMode>\\r\\n);\\r\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),r=a(3),l=a.n(r);a(13),a(2);var o=function(){const[e,t]=Object(n.useState)(\"\"),[a,r]=Object(n.useState)(null),[l,o]=Object(n.useState)(null),[s,m]=Object(n.useState)(\"\"),[i,h]=Object(n.useState)(!1);return Object(n.useEffect)(()=>{fetch(\"http://localhost:5000/weather/current?location=London\").then(e=>e.json()).then(e=>console.log(e)).catch(e=>console.error(\"Error:\",e))},[]),c.a.createElement(\"div\",{className:\"app-container\"},c.a.createElement(\"header\",{className:\"hero\"},c.a.createElement(\"div\",{className:\"hero-overlay\"},c.a.createElement(\"div\",{className:\"hero-content text-center\"},c.a.createElement(\"h1\",null,\"Weather Wonder\"),c.a.createElement(\"p\",null,\"Discover the weather in your favorite locations\"),c.a.createElement(\"form\",{onSubmit:t=>{t.preventDefault(),(async e=>{if(e){m(\"\"),h(!0);try{const a=await fetch(`http://localhost:5000/weather/current?location=${encodeURIComponent(e)}`);if(!a.ok)throw new Error(\"Failed to fetch current weather.\");const n=await a.json();r(n);const c=await fetch(`http://localhost:5000/weather/forecast?location=${encodeURIComponent(e)}`);if(!c.ok)throw new Error(\"Failed to fetch forecast.\");const l=await c.json();o(l)}catch(t){m(t.message),r(null),o(null)}h(!1)}else m(\"Please enter a location.\")})(e)},className:\"search-form mt-4\"},c.a.createElement(\"input\",{type:\"text\",placeholder:\"Enter location (city, zip, landmark...)\",value:e,onChange:e=>t(e.target.value)}),c.a.createElement(\"button\",{type:\"submit\"},\"Search\")),s&&c.a.createElement(\"div\",{className:\"alert alert-danger mt-3\"},s)))),c.a.createElement(\"main\",{className:\"container py-5\"},i&&c.a.createElement(\"div\",{className:\"loader-container\"},c.a.createElement(\"div\",{className:\"loader\"})),a&&!i&&c.a.createElement(\"div\",{className:\"current-weather card mx-auto mb-5\"},c.a.createElement(\"div\",{className:\"card-body text-center\"},c.a.createElement(\"h2\",null,a.name,\", \",a.sys.country),c.a.createElement(\"div\",{className:\"weather-details d-flex justify-content-center align-items-center\"},c.a.createElement(\"img\",{src:`http://openweathermap.org/img/wn/${a.weather[0].icon}@2x.png`,alt:a.weather[0].description}),c.a.createElement(\"div\",{className:\"weather-info ml-3\"},c.a.createElement(\"h3\",null,a.main.temp,\" \\xb0C\"),c.a.createElement(\"p\",{className:\"mb-0 text-capitalize\"},a.weather[0].description),c.a.createElement(\"p\",{className:\"mb-0\"},\"Humidity: \",a.main.humidity,\"%\"),c.a.createElement(\"p\",{className:\"mb-0\"},\"Wind: \",a.wind.speed,\" m/s\"))))),l&&!i&&c.a.createElement(\"div\",{className:\"forecast-section\"},c.a.createElement(\"h2\",{className:\"text-center text-white mb-4\"},\"5-Day Forecast\"),c.a.createElement(\"div\",{className:\"row\"},l.list.filter((e,t)=>t%8===0).map((e,t)=>c.a.createElement(\"div\",{key:t,className:\"col-md-2 col-sm-4 col-6\"},c.a.createElement(\"div\",{className:\"forecast-card card mb-3\"},c.a.createElement(\"div\",{className:\"card-body text-center\"},c.a.createElement(\"h5\",null,new Date(e.dt_txt).toLocaleDateString(\"en-US\",{weekday:\"short\",month:\"short\",day:\"numeric\"})),c.a.createElement(\"img\",{src:`http://openweathermap.org/img/wn/${e.weather[0].icon}@2x.png`,alt:e.weather[0].description}),c.a.createElement(\"p\",{className:\"text-capitalize\"},e.weather[0].description),c.a.createElement(\"p\",null,e.main.temp,\" \\xb0C\")))))))),c.a.createElement(\"footer\",{className:\"text-center py-3\"},c.a.createElement(\"p\",{className:\"mb-0\"},\"Weather Wonder \\xa9 \",(new Date).getFullYear())))};l.a.createRoot(document.getElementById(\"root\")).render(c.a.createElement(c.a.StrictMode,null,c.a.createElement(o,null)))},2:function(e,t,a){},4:function(e,t,a){e.exports=a(14)}},[[4,1,2]]]);","extractedComments":[]}